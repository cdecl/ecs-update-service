# This is a basic workflow to help you get started with Actions

name: CI

on:
  workflow_dispatch:

env:
  AWS_REGION: ap-northeast-2                   # set this to your preferred AWS region, e.g. us-west-1
  ECS_SERVICE: infra-dev-mvcapp-svc                 # set this to your Amazon ECS service name
  ECS_CLUSTER: infra-dev-mvcapp-ecs                 # set this to your Amazon ECS cluster name
  ECS_TASK_DEFINITION: infra-dev-mvcapp-def.json  # file, e.g. .aws/task-definition.json                 
  CONTAINER_NAME: mvcapp
  DOCKER_IMAGE: cdecl/mvcapp:0.6

jobs:

  build:
    # runs-on: [ self-hosted , ubuntu-latest ]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1.1.3
        with:
          task-definition: ${{ env.ECS_TASK_DEFINITION }}
          container-name: ${{ env.CONTAINER_NAME }}
          image: ${{ env.DOCKER_IMAGE }} 

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1.4.11
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          # wait-for-service-stability: true
